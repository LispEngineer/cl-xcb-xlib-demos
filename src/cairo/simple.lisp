(in-package :xcb.clx.demos)

(defun cairo-run (demo-name &key (screen 0) (w 300) (h 300))
  (let* ((display (open-display ""))
         (xwin (make-x-window display :screen screen
                                      :x 0 :y 0 :w w :h h)))
    (with-display display
      (map-window xwin)
      (display-force-output display))
    (let ((surface (cairo:create-xcb-surface xwin)))
      (unwind-protect
           (event-case (display :force-output-p t
                                :discard-p t)
             (:exposure (count)
               (when (= 0 count) (funcall demo-name w h surface)) nil)
             (:button-press () t)
             (:configure-notify (height width)
               (unless (and (= width w) (= height h))
                 (setf w width)
                 (setf h height)
                 (cairo:xcb-surface-set-size surface w h)
                 (funcall demo-name w h surface))
               nil)
             (:client-message (type data)
               (when (and (eq type :wm_protocols)
                          (= (elt data 0) (find-atom display :wm_delete_window)))
                 t)))
        (cairo:destroy surface)
        (destroy-window xwin)
        (close-display display)))))
